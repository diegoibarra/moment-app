{"ast":null,"code":"var _jsxFileName = \"/Users/diego/moment-app/src/CreateMoment.js\";\nimport React from 'react'; // material-ui components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport momentActions from './momentActions.js';\nimport globalHook from 'use-global-hook';\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\"; // core components\n\nimport Button from \"./components/CustomButtons/Button.js\"; //import modalStyle from \"./assets/jss/material-dashboard-pro-react/modalStyle.js\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n}); //const useStyles = makeStyles(modalStyle);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  input: {\n    display: 'none'\n  }\n}));\nconst initialState = {\n  modal: false,\n  color: '',\n  message: '',\n  highlight: ''\n};\n\nconst handleSubmit = (modalState, modalActions, props) => {\n  props.globalActions.addMoment({\n    message: modalState.message,\n    color: bgColors[modalState.color],\n    image: modalState.image\n  });\n  modalActions.setColor('');\n  modalActions.setMessage(' ');\n  modalActions.setModal(false);\n};\n\nconst bgColors = {\n  \"Blue\": \"#00B1E1\",\n  \"Green\": \"#8CC152\",\n  \"Red\": \"#E9573F\",\n  \"Yellow\": \"#F6BB42\",\n  \"Orange\": \"#FFA500\",\n  \"Purple\": \"#800080\"\n};\nconst colors = ['Red', 'Green', 'Blue', 'Yellow', 'Orange', 'Purple'];\nconst useGlobal = globalHook(React, initialState, momentActions);\nexport default function CreateMoment(props) {\n  const [modalState, modalActions] = useGlobal();\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"rose\",\n    round: true,\n    onClick: () => modalActions.setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Create Moment\")), React.createElement(Dialog, {\n    open: modalState.modal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => modalActions.setModal(false),\n    \"aria-labelledby\": \"modal-slide-title\",\n    \"aria-describedby\": \"modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(\"form\", {\n    id: \"create-form\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"inherit\",\n    onClick: () => modalActions.setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }))), React.createElement(DialogContent, {\n    id: \"modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Message\",\n    value: modalState.message,\n    onChange: event => modalActions.setMessage(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Highlight\",\n    value: modalState.highlight,\n    onChange: event => modalActions.setHighlight(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), React.createElement(TextField, {\n    id: \"standard-select-color\",\n    select: true,\n    label: \"Select\",\n    value: modalState.color,\n    onChange: event => modalActions.setColor(event.target.value),\n    helperText: \"Please select your color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, colors.map(colorOption => React.createElement(MenuItem, {\n    key: colorOption,\n    value: colorOption,\n    style: {\n      color: 'white',\n      backgroundColor: bgColors[colorOption]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, colorOption))), React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    onChange: event => modalActions.setImage(event.target.files[0]),\n    id: \"icon-button-file\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, React.createElement(PhotoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }))), React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to do this?\")), React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onClick: () => modalActions.setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"Never Mind\"), React.createElement(Button, {\n    type: \"submit\",\n    form: \"create-moment\",\n    onClick: () => handleSubmit(modalState, modalActions, props),\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Yes\")))));\n}","map":{"version":3,"sources":["/Users/diego/moment-app/src/CreateMoment.js"],"names":["React","withStyles","makeStyles","momentActions","globalHook","Slide","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","IconButton","Close","PhotoCamera","Button","Transition","forwardRef","props","ref","useStyles","theme","root","margin","spacing","width","input","display","initialState","modal","color","message","highlight","handleSubmit","modalState","modalActions","globalActions","addMoment","bgColors","image","setColor","setMessage","setModal","colors","useGlobal","CreateMoment","classes","event","target","value","setHighlight","map","colorOption","backgroundColor","setImage","files"],"mappings":"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","sourcesContent":["import React from 'react';\n// material-ui components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport momentActions from './momentActions.js'\nimport globalHook from 'use-global-hook';\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\n// core components\nimport Button from \"./components/CustomButtons/Button.js\";\n\n//import modalStyle from \"./assets/jss/material-dashboard-pro-react/modalStyle.js\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\n//const useStyles = makeStyles(modalStyle);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n},\n  input: {\n      display: 'none'\n  }\n}));\n\nconst initialState = {\n  modal: false,\n  color: '',\n  message: '',\n  highlight: ''\n};\n\nconst handleSubmit = (modalState, modalActions, props) => {\n    props.globalActions.addMoment({\n        message: modalState.message,\n        color: bgColors[modalState.color],\n        image: modalState.image\n    })\n    modalActions.setColor('')\n    modalActions.setMessage(' ')\n    modalActions.setModal(false)\n}\n\nconst bgColors = {\n    \"Blue\": \"#00B1E1\",\n    \"Green\": \"#8CC152\",\n    \"Red\": \"#E9573F\",\n    \"Yellow\": \"#F6BB42\",\n    \"Orange\": \"#FFA500\",\n    \"Purple\": \"#800080\",\n}\n\nconst colors = ['Red', 'Green', 'Blue', 'Yellow', 'Orange', 'Purple'];\nconst useGlobal = globalHook(React, initialState, momentActions);\n\nexport default function CreateMoment(props) {\n  const [modalState, modalActions] = useGlobal();\n  const classes = useStyles();\n\n  return (\n    <div>\n        <div>\n        <Button color=\"rose\" round onClick={() => modalActions.setModal(true)}>\n          Create Moment\n        </Button>\n      </div>\n      <Dialog\n        open={modalState.modal}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => modalActions.setModal(false)}\n        aria-labelledby=\"modal-slide-title\"\n        aria-describedby=\"modal-slide-description\"\n      >\n      <form id=\"create-form\" className={classes.root} noValidate autoComplete=\"off\">\n        <DialogTitle\n          id=\"classic-modal-slide-title\"\n          disableTypography\n        >\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={() => modalActions.setModal(false)}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent\n          id=\"modal-slide-description\"\n        >\n            <TextField\n                id=\"standard-basic\"\n                label=\"Message\"\n                value={modalState.message}\n                onChange={(event) => modalActions.setMessage(event.target.value)}\n            />\n            <TextField\n                id=\"standard-basic\"\n                label=\"Highlight\"\n                value={modalState.highlight}\n                onChange={(event) => modalActions.setHighlight(event.target.value)}\n            />\n            <TextField\n              id=\"standard-select-color\"\n              select\n              label=\"Select\"\n              value={modalState.color}\n              onChange={(event) => modalActions.setColor(event.target.value)}\n              helperText=\"Please select your color\"\n            >\n              {colors.map(colorOption => (\n                <MenuItem\n                    key={colorOption}\n                    value={colorOption}\n                    style={{\n                            color: 'white',\n                            backgroundColor: bgColors[colorOption]\n                        }}\n                >\n                  {colorOption}\n                </MenuItem>\n              ))}\n            </TextField>\n            <input accept=\"image/*\" className={classes.input}\n              onChange={(event) => modalActions.setImage(event.target.files[0])}\n               id=\"icon-button-file\" type=\"file\" />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                  <PhotoCamera />\n                </IconButton>\n              </label>\n          <h5>Are you sure you want to do this?</h5>\n        </DialogContent>\n        <DialogActions\n        >\n          <Button onClick={() => modalActions.setModal(false)}>Never Mind</Button>\n          <Button type=\"submit\" form=\"create-moment\"\n            onClick={() => handleSubmit(modalState, modalActions, props)}\n            color=\"success\"\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </form>\n\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}