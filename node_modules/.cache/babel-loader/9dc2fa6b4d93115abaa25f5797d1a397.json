{"ast":null,"code":"var _jsxFileName = \"/Users/diego/moment-app/src/MomentPictureCard.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%'\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n    borderRadius: \"3px\"\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity')\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.red,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity')\n  }\n}));\n\nvar loadFile = function (file) {\n  file.src = URL.createObjectURL(file);\n  return file;\n};\n\nexport default function MomentPictureCard(props) {\n  const classes = useStyles();\n  var image = props.moment.image;\n  loadFile(image);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(ButtonBase, {\n    focusRipple: true,\n    key: image.title,\n    className: classes.image,\n    focusVisibleClassName: classes.focusVisible,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(\"span\", {\n    className: classes.imageSrc,\n    style: {\n      backgroundImage: `url(${image.src})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(\"span\", {\n    className: classes.imageBackdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), React.createElement(\"span\", {\n    className: classes.imageButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: classes.imageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, props.moment.message, React.createElement(\"span\", {\n    className: classes.imageMarked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/diego/moment-app/src/MomentPictureCard.js"],"names":["React","makeStyles","ButtonBase","Typography","useStyles","theme","root","display","flexWrap","minWidth","width","image","position","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","borderRadius","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","red","loadFile","file","src","URL","createObjectURL","MomentPictureCard","props","classes","moment","title","backgroundImage","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%',\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n    borderRadius: \"3px\",\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.red,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  },\n}));\n\nvar loadFile = function(file) {\n\tfile.src = URL.createObjectURL(file);\n\n    return file\n};\n\nexport default function MomentPictureCard(props) {\n  const classes = useStyles();\n  var image = props.moment.image\n  loadFile(image)\n\n  return (\n    <div className={classes.root}>\n        <ButtonBase\n          focusRipple\n          key={image.title}\n          className={classes.image}\n          focusVisibleClassName={classes.focusVisible}\n          style={{\n            width: '100%',\n          }}\n        >\n          <span\n            className={classes.imageSrc}\n            style={{\n              backgroundImage: `url(${image.src})`,\n            }}\n          />\n          <span className={classes.imageBackdrop} />\n          <span className={classes.imageButton}>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={classes.imageTitle}\n            >\n              {props.moment.message}\n              <span className={classes.imageMarked} />\n            </Typography>\n          </span>\n        </ButtonBase>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}