{"ast":null,"code":"var _jsxFileName = \"/Users/diego/moment-app/src/CreateMoment.js\";\nimport React from 'react'; // material-ui components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport Button from \"./components/CustomButtons/Button.js\"; //import modalStyle from \"./assets/jss/material-dashboard-pro-react/modalStyle.js\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n}); //const useStyles = makeStyles(modalStyle);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function CreateMoment() {\n  const [modal, setModal] = React.useState(false);\n  const [color, setColor] = React.useState('red');\n  const [message, setMessage] = React.useState('');\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"rose\",\n    round: true,\n    onClick: () => setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Create Moment\")), React.createElement(Dialog, {\n    open: modal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setModal(false),\n    \"aria-labelledby\": \"modal-slide-title\",\n    \"aria-describedby\": \"modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Standard\",\n    onChange: event => setMessage(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"inherit\",\n    onClick: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, message)), React.createElement(DialogContent, {\n    id: \"modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to do this?\")), React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onClick: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Never Mind\"), React.createElement(Button, {\n    onClick: () => setModal(false),\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Yes\")))));\n}","map":{"version":3,"sources":["/Users/diego/moment-app/src/CreateMoment.js"],"names":["React","withStyles","makeStyles","Slide","Dialog","DialogTitle","DialogContent","DialogActions","TextField","IconButton","Close","Button","Transition","forwardRef","props","ref","useStyles","theme","root","margin","spacing","width","CreateMoment","modal","setModal","useState","color","setColor","message","setMessage","classes","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\n// material-ui components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport Button from \"./components/CustomButtons/Button.js\";\n\n//import modalStyle from \"./assets/jss/material-dashboard-pro-react/modalStyle.js\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\n//const useStyles = makeStyles(modalStyle);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function CreateMoment() {\n  const [modal, setModal] = React.useState(false);\n  const [color, setColor] = React.useState('red');\n  const [message, setMessage] = React.useState('');\n  const classes = useStyles();\n\n  return (\n    <div>\n        <div>\n        <Button color=\"rose\" round onClick={() => setModal(true)}>\n          Create Moment\n        </Button>\n      </div>\n      <Dialog\n        open={modal}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setModal(false)}\n        aria-labelledby=\"modal-slide-title\"\n        aria-describedby=\"modal-slide-description\"\n      >\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n            id=\"standard-basic\"\n            label=\"Standard\"\n            onChange={(event) => setMessage(event.target.value)}\n        />\n        <DialogTitle\n          id=\"classic-modal-slide-title\"\n          disableTypography\n        >\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={() => setModal(false)}\n          >\n            <Close />\n          </IconButton>\n          <h4 >{message}</h4>\n        </DialogTitle>\n        <DialogContent\n          id=\"modal-slide-description\"\n        >\n          <h5>Are you sure you want to do this?</h5>\n        </DialogContent>\n        <DialogActions\n        >\n          <Button onClick={() => setModal(false)}>Never Mind</Button>\n          <Button onClick={() => setModal(false)} color=\"success\">\n            Yes\n          </Button>\n        </DialogActions>\n      </form>\n\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}